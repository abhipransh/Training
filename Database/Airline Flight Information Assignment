1. CREATE DATABASE <dbname> - Creates a new database
	CREATE DATABASE airline_flight_information

2. \l - list all databases

3. \c <dbname> - Selects the database you want
	\c airline_flight_information
	
4. CREATE TABLE table_name (  - Creates table structure
   	column1 datatype,
   	column2 datatype,
   	column3 datatype,
   	.....
   	columnN datatype,
   	PRIMARY KEY( one or more columns )
   );

	CREATE TABLE flights (		
		flno INT,
		source varchar,
		destination varchar,
		distance INT,
		departs TIMESTAMPTZ,
		arrives TIMESTAMPTZ,
		price INT,
		PRIMARY KEY(flno)
	);
	
	CREATE TABLE aircraft (
		aid INT,
		aname varchar,
 		cruisingrange INT,
		PRIMARY KEY(aid)
   	);
   	
   	CREATE TABLE employees (
		eid INT,
 		ename varchar,
		salary INT,
 		PRIMARY KEY (eid)
	);
	
	CREATE TABLE certified (
		eid INT,
		aid INT,
		PRIMARY KEY (eid, aid),
		FOREIGN KEY (eid) REFERENCES employees (eid),
		FOREIGN KEY (aid) REFERENCES aircraft (aid)
	);


5. \d <table_name> - shows the structure of table
	\d flights
	
6. ALTER TABLE <table_name> ALTER COLUMN <column_name> SET DEFAULT <value>;  - Sets default value for a column
	ALTER TABLE flights ALTER COLUMN flno SET DEFAULT 0;
	ALTER TABLE aircraft ALTER COLUMN aid SET DEFAULT 0;
	ALTER TABLE employees ALTER COLUMN eid SET DEFAULT 0;
	ALTER TABLE certified ALTER COLUMN eid SET DEFAULT 0;
	ALTER TABLE certified ALTER COLUMN aid SET DEFAULT 0;


7. ALTER TABLE <table_name> ALTER COLUMN <column_name> TYPE <data_type>;  - Changes the data type of a column
	ALTER TABLE flights ALTER COLUMN price TYPE money;
	ALTER TABLE employees ALTER COLUMN salary TYPE money;

8. \dt - Shows all tables in the database

9. SET timezone = '<Location>';  - Set timezone of your database
	SET timezone = 'Asia/Kolkata';

10. SHOW TIMEZONE; - Shows timezone of the database;

11. INSERT INTO TABLE_NAME (column1, column2, column3,...columnN)  - Insert values in table
    VALUES (value1, value2, value3,...valueN);

	INSERT INTO flights (flno, source, destination, distance, departs, arrives, price) VALUES (
		1, 'Delhi', 'Mumbai', 1148, '06:30:00', '08:00:00', 8000), (
		2, 'Mumbai', 'Bangalore', 842, '09:10:00', '10:20:00', 4000), (
		3, 'Bangalore', 'Chennai', 284, '12:00:00', '12:50:00', 3500), (
		4, 'Kolkata', 'Hanoi', 1798, '01:10:00', '04:05:00', 10000), (
		5, 'Mumbai', 'Bangalore', 842, '13:10:00', '15:20:00', 5000), (
		6, 'Delhi' , 'Bangalore', 1740, '15:10:00', '17:00:00', 8000), (
		7, 'Delhi', 'Mumbai', 1148, '16:10:00', '18:30:00', 10000);
		
	INSERT INTO aircraft (aid, aname, cruisingrange) VALUES (
		1, 'Airbus a380', 2000), (
		2, 'Boeing 747', 1900), (
		3, 'Convair 880', 3000), (
		4, 'Lockheed L-1011 TriStar', 1500), (
		5, 'Airbus a318', 900), (
		6, 'Boeing 828', 1000), (
		7, 'Douglas DC-3', 2800);
		
	INSERT INTO employees(eid, ename, salary) VALUES(
		1, 'Alok Verma', 45000), (
		2, 'Shankar Prabhakar', 50000), (
		3, 'Suneil Kumar', 50000), (
		4, 'Kamala Kaur', 30000), (
		5, 'Robin Roshan', 55000), (
		6, 'Gaurav Taneja', 65000), (
		7, 'Ayushi Kumari', 70000);

	INSERT INTO certified(eid, aid) VALUES (
		1, 2), (
		2, 2), (
		3, 2), (
		4, 1), (
		5, 1), (
		6, 3), (
		7, 3), (
		7, 4), (
		6, 4), (
		5, 5), (
		4, 5), (
		3, 6), (
		2, 7), (
		1, 7);
	
	INSERT INTO certified (eid, aid) VALUES (1, 3), (1, 6);
	
	INSERT INTO flights(flno, source, destination, distance, departs, arrives, price) VALUES (
		8, 'Los Angeles', 'Honolulu', 4115, '12:30:00', '10:10:00', 75000), (
		9, 'Los Angeles', 'Honolulu', 4115, '14:30:00', '02:10:00', 80000);



12. SELECT * FROM <table_name>;  - Shows all the data in the table
	SELECT * FROM flights;

13. UPDATE <table_name> SET <column_name> = <new_value> WHERE <condition>;  - Update values in a table
	UPDATE employees SET salary = 85000 WHERE eid = 4 OR eid = 5;
	UPDATE employees SET salary = 125000 WHERE eid IN(1, 2, 3);
	UPDATE aircraft SET cruisingrange = 850 WHERE aid = 3;

QUERIES:

a. Find the names of aircraft such that all pilots certified to operate them earn more than 80,000.


b. For each pilot who is certified for more than three aircraft, find the eid and the maximum cruisingrange of the aircraft for which she or he is certified.

-> SELECT c.eid, MAX(cruisingrange) 
   FROM certified c INNER JOIN aircraft USING(aid) 
   GROUP BY c.eid 
   HAVING COUNT(*) > 3; 

c. Find the names of pilots whose salary is less than the price of the cheapest route from Los Angeles to Honolulu.

-> SELECT ename 
   FROM employees 
   WHERE salary < (
   		SELECT MIN(price) 
   		FROM flights 
   		WHERE source = 'Los Angeles' 
   		AND destination = 'Honolulu'
   		); 

d. For all aircraft with cruisingrange over 1000 miles, find the name of the aircraft and the average salary of all pilots certified for this aircraft.

-> SELECT aname, AVG(salary::numeric) 
   FROM aircraft INNER JOIN certified USING(aid) INNER JOIN employees e USING(eid) 
   WHERE cruisingrange > 1000 
   GROUP BY aname;

e. Find the names of pilots certified for some Boeing aircraft.

-> SELECT DISTINCT ename 
   FROM employees INNER JOIN certified USING(eid) INNER JOIN aircraft USING(aid)  
   WHERE aname LIKE '%Boeing%';

f. Find the aids of all aircraft that can be used on routes from Los Angeles to Chicago.

-> SELECT aid 
   FROM aircraft 
   WHERE cruisingrange > (
   			SELECT MIN(distance) 
   			FROM flights 
   			WHERE source = 'Los Angeles' 
   			AND destination = 'Chicago'); 

g. Identify the routes that can be piloted by every pilot who makes more than 100,000.

-> SELECT DISTINCT f.source, f.destination 
   FROM flights f 
   WHERE distance <= (
   			SELECT MIN(range) 
   			FROM (
   				SELECT c.eid, MAX(a.cruisingrange) range 
   				FROM employees e INNER JOIN certified c USING(eid) INNER JOIN aircraft a USING(aid) 
   				WHERE e.salary::numeric > 100000 
   				GROUP BY c.eid) range
   		      );






































